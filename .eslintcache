[{"D:\\WebProject\\wcmoney\\src\\index.tsx":"1","D:\\WebProject\\wcmoney\\src\\App.tsx":"2","D:\\WebProject\\wcmoney\\src\\store\\index.js":"3","D:\\WebProject\\wcmoney\\src\\store\\reducer.js":"4","D:\\WebProject\\wcmoney\\src\\views\\Detail\\index.tsx":"5","D:\\WebProject\\wcmoney\\src\\views\\Home\\index.tsx":"6","D:\\WebProject\\wcmoney\\src\\views\\Statistics\\index.tsx":"7","D:\\WebProject\\wcmoney\\src\\views\\NoMatch\\index.tsx":"8","D:\\WebProject\\wcmoney\\src\\views\\Statistics\\ChartLibs\\OverviewChart.tsx":"9","D:\\WebProject\\wcmoney\\src\\views\\Statistics\\ChartLibs\\ExpensesChart.tsx":"10","D:\\WebProject\\wcmoney\\src\\views\\Statistics\\ChartLibs\\IncomeChart.tsx":"11","D:\\WebProject\\wcmoney\\src\\store\\recordsstore\\index.js":"12","D:\\WebProject\\wcmoney\\src\\store\\recordsstore\\actionCreators.js":"13","D:\\WebProject\\wcmoney\\src\\store\\recordsstore\\reducer.js":"14","D:\\WebProject\\wcmoney\\src\\hooks\\useTags.tsx":"15","D:\\WebProject\\wcmoney\\src\\hooks\\useRecords.tsx":"16","D:\\WebProject\\wcmoney\\src\\components\\MoneyLink\\MoneyLink.tsx":"17","D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\section\\CategorySection.tsx":"18","D:\\WebProject\\wcmoney\\src\\store\\recordsstore\\constans.js":"19","D:\\WebProject\\wcmoney\\src\\services\\records.js":"20","D:\\WebProject\\wcmoney\\src\\components\\Icon\\index.tsx":"21","D:\\WebProject\\wcmoney\\src\\components\\Layout\\index.tsx":"22","D:\\WebProject\\wcmoney\\src\\components\\TypeSection\\index.tsx":"23","D:\\WebProject\\wcmoney\\src\\hooks\\useUpdate.tsx":"24","D:\\WebProject\\wcmoney\\src\\common\\getData.tsx":"25","D:\\WebProject\\wcmoney\\src\\services\\axios.js":"26","D:\\WebProject\\wcmoney\\src\\services\\tags.js":"27","D:\\WebProject\\wcmoney\\src\\components\\WrapperChart\\index.tsx":"28","D:\\WebProject\\wcmoney\\src\\common\\createId.tsx":"29","D:\\WebProject\\wcmoney\\src\\components\\ShowMnoey\\index.tsx":"30","D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\index.tsx":"31","D:\\WebProject\\wcmoney\\src\\components\\TopNav\\index.tsx":"32","D:\\WebProject\\wcmoney\\src\\components\\Nav\\index.tsx":"33","D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\section\\TagsSection.tsx":"34","D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\section\\KeyboardSection.tsx":"35","D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\section\\NumberPadSection.tsx":"36","D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\section\\NotesSection.tsx":"37","D:\\WebProject\\wcmoney\\src\\components\\Wrapper\\index.tsx":"38","D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\Edit\\index.tsx":"39","D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\Edit\\EditTag.tsx":"40","D:\\WebProject\\wcmoney\\src\\common\\generateOutput.tsx":"41","D:\\WebProject\\wcmoney\\src\\components\\MaskDiv\\MaskDiv.tsx":"42","D:\\WebProject\\wcmoney\\src\\common\\iconsLib.tsx":"43"},{"size":306,"mtime":1626252537387,"results":"44","hashOfConfig":"45"},{"size":928,"mtime":1626341679128,"results":"46","hashOfConfig":"45"},{"size":319,"mtime":1626229437007,"results":"47","hashOfConfig":"45"},{"size":196,"mtime":1626340313858,"results":"48","hashOfConfig":"45"},{"size":4553,"mtime":1626345117611,"results":"49","hashOfConfig":"45"},{"size":2350,"mtime":1626351134951,"results":"50","hashOfConfig":"45"},{"size":2127,"mtime":1626324068642,"results":"51","hashOfConfig":"45"},{"size":207,"mtime":1626252537397,"results":"52","hashOfConfig":"45"},{"size":3592,"mtime":1626331220333,"results":"53","hashOfConfig":"45"},{"size":1438,"mtime":1626331455926,"results":"54","hashOfConfig":"45"},{"size":1409,"mtime":1626331435921,"results":"55","hashOfConfig":"45"},{"size":57,"mtime":1626230371793,"results":"56","hashOfConfig":"45"},{"size":256,"mtime":1626247909181,"results":"57","hashOfConfig":"45"},{"size":335,"mtime":1626230322768,"results":"58","hashOfConfig":"45"},{"size":4786,"mtime":1626418749060,"results":"59","hashOfConfig":"45"},{"size":3832,"mtime":1626580612384,"results":"60","hashOfConfig":"45"},{"size":673,"mtime":1626322822428,"results":"61","hashOfConfig":"45"},{"size":863,"mtime":1626313483808,"results":"62","hashOfConfig":"45"},{"size":45,"mtime":1626231988122,"results":"63","hashOfConfig":"45"},{"size":226,"mtime":1626250943839,"results":"64","hashOfConfig":"45"},{"size":440,"mtime":1626402145802,"results":"65","hashOfConfig":"45"},{"size":612,"mtime":1626252537363,"results":"66","hashOfConfig":"45"},{"size":674,"mtime":1626316007758,"results":"67","hashOfConfig":"45"},{"size":335,"mtime":1626252537368,"results":"68","hashOfConfig":"45"},{"size":815,"mtime":1626252537355,"results":"69","hashOfConfig":"45"},{"size":2258,"mtime":1626347582034,"results":"70","hashOfConfig":"45"},{"size":315,"mtime":1626253546798,"results":"71","hashOfConfig":"45"},{"size":296,"mtime":1626252537367,"results":"72","hashOfConfig":"45"},{"size":187,"mtime":1626252537355,"results":"73","hashOfConfig":"45"},{"size":1092,"mtime":1626331593626,"results":"74","hashOfConfig":"45"},{"size":2020,"mtime":1626580982788,"results":"75","hashOfConfig":"45"},{"size":849,"mtime":1626270269995,"results":"76","hashOfConfig":"45"},{"size":1776,"mtime":1626332663816,"results":"77","hashOfConfig":"45"},{"size":2354,"mtime":1626311872745,"results":"78","hashOfConfig":"45"},{"size":700,"mtime":1626266249793,"results":"79","hashOfConfig":"45"},{"size":2337,"mtime":1626267627254,"results":"80","hashOfConfig":"45"},{"size":3141,"mtime":1626269686145,"results":"81","hashOfConfig":"45"},{"size":365,"mtime":1626252537367,"results":"82","hashOfConfig":"45"},{"size":2557,"mtime":1626341865797,"results":"83","hashOfConfig":"45"},{"size":5608,"mtime":1626338876970,"results":"84","hashOfConfig":"45"},{"size":1492,"mtime":1626252537355,"results":"85","hashOfConfig":"45"},{"size":1472,"mtime":1626323334330,"results":"86","hashOfConfig":"45"},{"size":1272,"mtime":1626252537355,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1608br8",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"95"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"D:\\WebProject\\wcmoney\\src\\index.tsx",[],["184","185"],"D:\\WebProject\\wcmoney\\src\\App.tsx",[],"D:\\WebProject\\wcmoney\\src\\store\\index.js",[],["186","187"],"D:\\WebProject\\wcmoney\\src\\store\\reducer.js",[],"D:\\WebProject\\wcmoney\\src\\views\\Detail\\index.tsx",["188"],"import Layout from 'components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport { RecordItem, useRecords } from 'hooks/useRecords';\nimport useTags from 'hooks/useTags';\n\nimport { Dispatch } from 'redux';\nimport day from 'dayjs';\nimport styled from 'styled-components';\nimport Icon from 'components/Icon';\nimport { TypeSection } from 'components/TypeSection';\n\nimport { MoneyLink } from 'components/MoneyLink/MoneyLink';\nimport { CategorySection } from 'views/Home/Money/section/CategorySection';\nimport { connect } from 'react-redux';\nimport { getRecordsDataAction } from 'store/recordsstore/actionCreators';\n\n\nconst DateDiv = styled.div`\n  font-size: 16px;\n  color: #343233;\n  font-weight: 700;\n  padding: 0px 0px 0px 18px ;\n`;\nconst RecordList = styled.section`\n margin: 14px;\n display:flex;\n flex-direction: column;\n justify-content: center;\n\n`;\nconst RecordItems = styled.div`\n  background-color:#f9faf5;\n  margin-bottom: 10px;\n  padding: 10px;\n  border-radius: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  > div {\n  }\n  .left{\n    padding-right: 5px;\n    .icon{ \n      width: 26px; \n      height: 26px;\n    }\n  }\n  .center{\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    .nameSpan{\n      font-size: 14px;\n      font-weight: 400;\n    }\n    .noteSpan{\n      margin-top: 8px;\n      color: #666; \n      font-size: 14px;\n    }\n  }\n  .right {\n    display: flex;\n    flex-direction: column;\n    .amountSpan{\n      font-size: 18px;\n      font-weight: 700;\n    }\n    .dateSpan{\n      margin-top: 8px;\n      color: #666; \n      font-size: 14px;\n      text-align: right;\n    }\n  }\n  \n`;\nconst IconDiv = styled.div`\n .icon{\n  width: 148px;\n  height: 148px;\n }\n margin-top: 80px;\n padding: 20px;\n text-align: center;\n font-size: 24px; \n`;\n\nconst Detail: React.FC = (props) => {\n  const [category, setCategory] = useState<'-' | '+'>('-');\n  const { records } = useRecords();\n  const { getName, getIcon } = useTags();\n\n  const hash: { [key: string]: RecordItem[] } = {};\n  const selectedRecords = records.filter(r => r.category === category);\n  selectedRecords.map(r => {\n    const key = day(r.createdAt).format('YYYY-MM-DD');\n    // const key = r.createdAt;\n    if (!(key in hash)) {\n      hash[key] = [];\n    }\n    hash[key].push(r);\n    return hash;\n  });\n  // 把对象变为数组\n  const array = Object.entries(hash).sort((a, b) => {\n    if (a[0] === b[0]) return 0;\n    if (a[0] > b[0]) return -1;\n    if (a[0] < b[0]) return 1;\n    return 0;\n  });\n\n\n  return (\n    <Layout name=\"明细\">\n      <TypeSection>\n        <CategorySection value={category}\n          onChange={value => setCategory(value)}\n        />\n      </TypeSection>\n      <div style={{ height: \"70vh\", overflow: \"auto\" }}>\n        {array.length === 0 ?\n          <IconDiv><Icon name=\"none\" /><MoneyLink /></IconDiv>\n          : array.map(([date, records], index) => {\n            return (\n              <div key={index} >\n                <DateDiv>{date}</DateDiv>\n                <RecordList>\n                  {records.map((item, index) => {\n                    return (\n                      <RecordItems key={index}>\n                        <div className=\"left\">\n                          {item.tagIds.map(tagId => <span key={tagId}>\n                            <Icon name={getIcon(tagId)} />\n                          </span>)}\n                        </div>\n                        <div className=\"center\">\n                          {item.tagIds.map(tagId =>\n                            <span key={tagId}\n                              className=\"nameSpan\">{getName(tagId)}</span>)}\n                          <span className=\"noteSpan\">{item.note || '无备注'}</span>\n                        </div>\n                        <div className=\"right\">\n                          <span className=\"amountSpan\">￥{item.amount}</span>\n                          <span className=\"dateSpan\">\n                            {day(item.createdAt).format('HH:mm')}\n                          </span>\n                        </div>\n                      </RecordItems>\n                    );\n                  })}\n                </RecordList>\n              </div>\n            );\n          })\n        }\n      </div>\n    </Layout>\n  );\n};\nconst mapStateToProps = (state: { record: { records: any; }; }) => ({\n  records: state.record.records\n\n})\nconst mapDispatcherToProps = (dispatch: Dispatch) => ({\n  getRecordsData: () => dispatch(getRecordsDataAction() as any)\n})\nexport default connect(mapStateToProps, mapDispatcherToProps)(Detail);\n","D:\\WebProject\\wcmoney\\src\\views\\Home\\index.tsx",["189","190"],"import React from 'react';\nimport Layout from 'components/Layout';\nimport { MoneyLink } from 'components/MoneyLink/MoneyLink';\nimport { ShowMoney } from 'components/ShowMnoey';\nimport { useRecords, RecordItem } from 'hooks/useRecords';\nimport day from 'dayjs';\nimport styled from 'styled-components';\nimport Icon from 'components/Icon';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nconst MonthMoney = styled.div`\n display: flex;\n align-items: center;\n justify-content:space-around;\n span{ padding: 5px; }\n >div{\n   padding: 20px;\n   display: flex;\n   flex-direction: column \n }\n .first{\n  position: relative;\n }\n .first:after{    \n   position: absolute;    \n   top:1.1em;    \n   height: calc(100% - 2.2em);    \n   left:-2.5em;    \n   content: '';    \n   width:0;    \n   border-left: solid  #b7bdcd 1px;\n}\n .title{\n   font-size: 16px;\n   color: #b7bdcd;\n }\n .pay{\n  font-size: 18px;\n  color:#343233;\n  font-weight: 800;\n }\n`;\nconst Record = styled.div`\n    border: 1px #ffda44 solid;\n    width: 80px;\n    height: 80px;\n    margin:auto;\n    border-radius: 50%;\n    position: relative;\n   .icon{\n          width: 30px;\n          height: 30px;\n         \n          position: absolute;\n          top: 23px;\n          left:25px;\n          \n          }\n\n`\n  ;\nconst Home: React.FC = () => {\n\n  const { incomeMoney, expensesMonthMoney } = useRecords();\n  //const today = day(new Date()).format('DD');\n  const mouth = day(new Date()).format('MM');\n  const expenses = expensesMonthMoney(mouth);\n  const income = incomeMoney(mouth);\n  let { url } = useRouteMatch();\n\n  return (\n    <Layout name=\"记账\">\n      <MonthMoney>\n        <div>\n          <span className=\"title\">{parseInt(mouth)}月支出</span>\n          <span className=\"pay\">￥{expenses.reduce((preMoney, amount) => {\n            return preMoney += amount;\n          }, 0)}</span>\n        </div>\n        <div className=\"first\">\n          <span className=\"title\">{parseInt(mouth)}月收入 </span>\n          <span className=\"pay\"> ￥{income.reduce((preMoney, amount) => {\n            return preMoney += amount;\n          }, 0)}</span>\n        </div>\n\n      </MonthMoney>\n      <Record>\n        <Link to={`${url}/money`}> <Icon name=\"addrecord\"></Icon></Link>\n        {/* <Icon name=\"addrecord\"></Icon> */}\n\n      </Record>\n      <MoneyLink />\n    </Layout>\n  );\n};\n\nexport default Home;","D:\\WebProject\\wcmoney\\src\\views\\Statistics\\index.tsx",[],"D:\\WebProject\\wcmoney\\src\\views\\NoMatch\\index.tsx",[],"D:\\WebProject\\wcmoney\\src\\views\\Statistics\\ChartLibs\\OverviewChart.tsx",["191","192"],"import React from 'react';\nimport { WrapperChart } from 'components/WrapperChart';\nimport Icon from 'components/Icon';\nimport day from 'dayjs';\nimport _ from 'lodash';\nimport { useRecords } from 'hooks/useRecords';\n\n// import echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/grid'\nimport ReactEcharts from 'echarts-for-react';\nimport { ShowMoney } from 'components/ShowMnoey';\n\nconst OverviewChart = () => {\n  const { dayTotalList } = useRecords();\n  const getArray = () => {\n    const today = new Date();\n    const array = [];\n    for (let i = 0; i <= parseInt(day(today).format('DD')) - 1; i++) {\n      const dateString = day(today).subtract(i, 'day').format('MM/DD');\n      // 寻找recordsList中的createdAt和dateString一样的对象\n      const foundIncome = _.find(dayTotalList('+'), { title: dateString });\n      const foundExpenses = _.find(dayTotalList('-'), { title: dateString });\n      array.push({\n        key: dateString,\n        valuesIncome: foundIncome ? foundIncome.total : 0,\n        valuesExpenses: foundExpenses ? foundExpenses.total : 0\n      });\n    }\n    array.sort((a, b) => {\n      if (a.key > b.key) {\n        return 1;\n      } else if (a.key === b.key) {\n        return 0;\n      } else {\n        return -1;\n      }\n    });\n\n    return array;\n  };\n  const getOption = () => {\n    const keys = getArray().map(item => item.key);\n    const valuesIncome = getArray().map(item => item.valuesIncome);\n    const valuesExpenses = getArray().map(item => item.valuesExpenses);\n    return {\n      title: {\n        subtext: '每日收入支出',\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        }\n      },\n      legend: {\n        data: ['支出', '收入'],\n        bottom: 0,\n\n      },\n      grid: {\n        top: '13%',\n        left: '3%',\n        right: '4%',\n        bottom: '12%',\n        containLabel: true\n      },\n      xAxis:\n      {\n        type: 'category',\n        boundaryGap: false,\n        data: keys,\n      }\n      ,\n      yAxis: [\n        {\n          type: 'value',\n          //splitLine: { show: false },\n          axisLine: { show: false },\n          axisTick: { show: false }\n        }\n      ],\n      series: [\n        {\n          name: '支出',\n          type: 'bar',\n          // stack: '总量',\n          // smooth: true,\n          // lineStyle: {\n          //   width: 3,\n          //   color: '#9bcac0'\n          // },\n          // areaStyle: { color: '#9bcac0' },\n          // itemStyle: {\n          //   color: '#9bcac0',\n          //   borderWidth: 2\n          // },\n          // symbol: 'circle',\n          // symbolSize: 8,\n          data: valuesExpenses\n        },\n        {\n          name: '收入',\n          type: 'bar',\n          // stack: '总量',\n          // smooth: true,\n          // lineStyle: {\n          //   width: 3,\n          //   color: '#ffa1a0'\n          // },\n          // areaStyle: { color: '#ffa1a0' },\n          // itemStyle: {\n          //   color: '#ffa1a0',\n          //   borderWidth: 2\n          // },\n          // symbol: 'circle',\n          // symbolSize: 8,\n          data: valuesIncome\n        }\n      ]\n    };\n  };\n\n  return (\n    <WrapperChart>\n      {/* <ShowMoney>\n        <span className=\"titleWrapper\">\n          <Icon name=\"chart\" />\n          支出和收入\n        </span>\n      </ShowMoney> */}\n      <ReactEcharts option={getOption()} lazyUpdate={false} />\n    </WrapperChart>\n  );\n};\n\nexport { OverviewChart };","D:\\WebProject\\wcmoney\\src\\views\\Statistics\\ChartLibs\\ExpensesChart.tsx",[],"D:\\WebProject\\wcmoney\\src\\views\\Statistics\\ChartLibs\\IncomeChart.tsx",[],"D:\\WebProject\\wcmoney\\src\\store\\recordsstore\\index.js",[],"D:\\WebProject\\wcmoney\\src\\store\\recordsstore\\actionCreators.js",["193"],"import * as actionTypes from './constans'\r\nimport { getRecords } from \"../../services/records\"\r\n\r\nexport const getRecordsDataAction = () => {\r\n    return dispatch => {\r\n        getRecords().then(res => {\r\n            console.log(res);\r\n        })\r\n    }\r\n}","D:\\WebProject\\wcmoney\\src\\store\\recordsstore\\reducer.js",[],"D:\\WebProject\\wcmoney\\src\\hooks\\useTags.tsx",["194"],"import { useEffect, useState } from 'react';\nimport { createId } from 'common/createId';\nimport { useUpdate } from './useUpdate';\nimport { addTags, deleteTags, getTags } from 'services/tags';\nimport { result } from 'lodash';\n\nconst useTags = () => {\n  const [tags, setTags] = useState<{ id: number, name: string, iconName: string, mold: string }[]>([])\n\n  // useEffect(()=>{\n  //  let localTags =  JSON.parse(window.localStorage.getItem('tags') || '[]')\n  //   if(localTags.length === 0){\n  //       localTags = [\n  //         {id:createId(),name:\"餐饮\",iconName:\"1\",mold:\"-\"},  // 1\n  //         { id: createId(), name: \"娱乐\", iconName: \"2\", mold: \"-\" },  // 2\n  //         {id:createId(),name:\"日用\",iconName:\"3\",mold:\"-\"},  // 3\n  //         {id:createId(),name:\"通讯\",iconName:\"4\",mold:\"-\"},  // 4\n  //         {id:createId(),name:\"果蔬\",iconName:\"5\",mold:\"-\"},  // 5\n  //         {id:createId(),name:\"交通\",iconName:\"6\",mold:\"-\"},  // 6\n  //         {id:createId(),name:\"烟酒\",iconName:\"7\",mold:\"-\"},  // 7\n  //         {id:createId(),name:\"数码\",iconName:\"8\",mold:\"-\"},  // 8\n  //         {id:createId(),name:\"服饰\",iconName:\"9\",mold:\"-\"},  // 9\n  //         {id:createId(),name:\"宠物\",iconName:\"10\",mold:\"-\"},  // 10\n  //         {id:createId(),name:\"旅行\",iconName:\"11\",mold:\"-\"},  // 11\n  //         {id:createId(),name:\"美容\",iconName:\"12\",mold:\"-\"},  // 12\n  //         {id:createId(),name:\"社交\",iconName:\"13\",mold:\"-\"},  // 13,\n  //         {id:createId(),name:\"汽车\",iconName:\"14\",mold:\"-\"},  // 14\n  //         {id:createId(),name:\"住房\",iconName:\"15\",mold:\"-\"},  // 15\n  //         {id:createId(),name:\"书籍\",iconName:\"16\",mold:\"-\"},  // 16\n  //         {id:createId(),name:\"长辈\",iconName:\"17\",mold:\"-\"},  // 17\n  //         {id:createId(),name:\"彩票\",iconName:\"18\",mold:\"-\"},  // 18\n  //         {id:createId(),name:\"学习\",iconName:\"19\",mold:\"-\"},  // 19\n  //         {id:createId(),name:\"办公\",iconName:\"20\",mold:\"-\"},  // 20\n  //         {id:createId(),name:\"礼物\",iconName:\"21\",mold:\"-\"},  // 21\n  //         {id:createId(),name:\"运动\",iconName:\"22\",mold:\"-\"},  // 22\n  //         {id:createId(),name:\"零食\",iconName:\"23\",mold:\"-\"},  // 23\n  //         {id:createId(),name:\"维修\",iconName:\"24\",mold:\"-\"},  // 24\n  //         {id:createId(),name:\"工资\",iconName:\"001\",mold:\"+\"},  // 25\n  //         {id:createId(),name:\"兼职\",iconName:\"002\",mold:\"+\"},  // 25\n  //         {id:createId(),name:\"理财\",iconName:\"003\",mold:\"+\"},  // 25\n  //         {id:createId(),name:\"礼金\",iconName:\"004\",mold:\"+\"},  // 25\n  //         {id:createId(),name:\"其他\",iconName:\"005\",mold:\"+\"},  // 25\n\n  //       ]\n  //   }\n  //   setTags(localTags)\n  // },[])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await getTags();\n      //console.log(result);\n      setTags(result || '[]');\n    }\n    fetchData();\n    //console.log('执行了get')\n  }, []);\n\n\n\n  useUpdate(() => {\n    window.localStorage.setItem('tags', JSON.stringify(tags))\n  }, tags)\n\n  const findTag = (id: number) => tags.filter(tag => tag.id === id)[0]\n\n  // 找到 某个标签的id\n  const findIndex = (id: number) => {\n    let result = -1;\n    for (let i = 0; i < tags.length; i++) {\n      if (tags[i].id === id) {\n        result = i;\n        break;\n      }\n    }\n    return result\n  }\n\n  // 修改该标签\n  const updateTag = (id: number, obj: { name: string, iconName: string }, mold: string) => {\n    setTags(tags.map(tag => tag.id === id ? { id, name: obj.name, iconName: obj.iconName, mold } : tag))\n    window.location.reload()\n  }\n  // 删除该标签\n  const deleteTag = (id: number) => {\n    //setTags(tags.filter(tag => tag.id !== id))\n    // window.location.reload()\n    //console.log('删除了');\n\n    deleteTags(id).then(() => {\n\n      //console.log('执行了get')\n    })\n  }\n\n  // 添加该标签\n  const addTag = (name: string, iconName: string, mold: string) => {\n    if (name !== null && name !== \"\") {\n      // setTags([...tags, { id: createId(), name, iconName, mold }])\n\n      addTags({ id: createId(), name, iconName, mold })\n        .then(res => {\n          //console.log('res=>', res.data);\n        })\n      //console.log(JSON.stringify({ id: createId(), name, iconName, mold }))\n      //console.log('执行了update')\n\n      //window.location.reload()\n    }\n  }\n\n  // 获取该标签的名字\n  const getName = (id: number) => {\n    const tag = tags.filter(tag => tag.id === id)[0]\n    return tag ? tag.name : \"\"\n  }\n  // 获取该标签的图标\n  const getIcon = (id: number) => {\n    const tag = tags.filter(tag => tag.id === id)[0]\n    return tag ? tag.iconName : \"9999\"\n  }\n  return { tags, setTags, findTag, findIndex, updateTag, deleteTag, addTag, getName, getIcon }\n}\n\nexport default useTags\n\n\n","D:\\WebProject\\wcmoney\\src\\hooks\\useRecords.tsx",[],"D:\\WebProject\\wcmoney\\src\\components\\MoneyLink\\MoneyLink.tsx",["195"],"import styled from 'styled-components';\nimport { Link, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport Money from 'views/Home/Money';\nimport React from 'react';\nimport Icon from 'components/Icon';\n\nconst Wrapper = styled.div`\n margin: 5px auto 0;\n font-size: 16px;\n font-weight: 700;\n border-radius: 10px;\n\n max-width: 141px;\n text-align: center;\n`;\n\nconst MoneyLink: React.FC = () => {\n  let { path, url } = useRouteMatch();\n  return (\n    <div>\n      <Wrapper>\n        <Link to={`${url}/money`}>记账</Link>\n      </Wrapper>\n      <Switch>\n        <Route path={`${path}/:money`} component={Money} />\n      </Switch>\n    </div >\n  )\n}\n\nexport { MoneyLink }","D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\section\\CategorySection.tsx",[],"D:\\WebProject\\wcmoney\\src\\store\\recordsstore\\constans.js",[],"D:\\WebProject\\wcmoney\\src\\services\\records.js",[],"D:\\WebProject\\wcmoney\\src\\components\\Icon\\index.tsx",[],"D:\\WebProject\\wcmoney\\src\\components\\Layout\\index.tsx",[],"D:\\WebProject\\wcmoney\\src\\components\\TypeSection\\index.tsx",[],"D:\\WebProject\\wcmoney\\src\\hooks\\useUpdate.tsx",[],"D:\\WebProject\\wcmoney\\src\\common\\getData.tsx",[],"D:\\WebProject\\wcmoney\\src\\services\\axios.js",[],"D:\\WebProject\\wcmoney\\src\\services\\tags.js",[],"D:\\WebProject\\wcmoney\\src\\components\\WrapperChart\\index.tsx",[],"D:\\WebProject\\wcmoney\\src\\common\\createId.tsx",[],"D:\\WebProject\\wcmoney\\src\\components\\ShowMnoey\\index.tsx",[],"D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\index.tsx",[],"D:\\WebProject\\wcmoney\\src\\components\\TopNav\\index.tsx",[],"D:\\WebProject\\wcmoney\\src\\components\\Nav\\index.tsx",[],"D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\section\\TagsSection.tsx",[],"D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\section\\KeyboardSection.tsx",[],"D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\section\\NumberPadSection.tsx",[],"D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\section\\NotesSection.tsx",[],"D:\\WebProject\\wcmoney\\src\\components\\Wrapper\\index.tsx",[],"D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\Edit\\index.tsx",["196","197","198"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport TopNav from 'components/TopNav';\nimport { Wrapper } from 'components/Wrapper';\nimport Icon from 'components/Icon';\nimport { TypeSection } from 'components/TypeSection';\n\nimport useTags from 'hooks/useTags';\nimport { Link, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { EditTag } from './EditTag';\nimport { CategorySection } from '../section/CategorySection';\nimport { connect } from 'react-redux';\n\n\nconst TagsList = styled.section`\n  flex: 1;\n  overflow-y: auto;\n  ul{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n  li{ \n      display:flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 10px 12px;\n      margin-left: 10px;\n      > .tags{\n        display:flex;\n        align-items: center;\n        > span {\n          padding-left: 8px;\n          font-size: 16px;\n        }\n        > .icon{\n          width: 25px;\n          height: 25px;\n        }\n      }\n      .icon{\n         width: 24px;\n         height: 24px;\n      }\n  }\n`;\nconst AddTag = styled.section`\n  text-align: center;\n  background-color:#ffffff;\n  font-size: 14px;\n  padding: 14px 0;\n  box-shadow: -5px 3px 6px #888888;\n`;\n\nconst Edit: React.FC = (props: any) => {\n  const { path, url } = useRouteMatch();\n  const { tags, setTags } = useTags();\n  const [category, setCategory] = useState<'-' | '+'>('-');\n  const moldTags = tags.filter(tag => tag.mold === category)\n\n\n\n  return (\n    <Wrapper>\n      <TopNav name=\"back\" {...props}>\n        分类管理\n      </TopNav>\n      <TypeSection>\n        <CategorySection value={category}\n          onChange={value => setCategory(value)}\n        />\n      </TypeSection>\n      <TagsList>\n        <ul>\n          {\n            moldTags.map((tag) => {\n              return (\n                <li key={tag.id}>\n                  <div className=\"tags\">\n                    <Icon name={tag.iconName} />\n                    <span>{tag.name}</span>\n                  </div>\n                  <Link to={`${url}/${tag.id}`}>\n                    <Icon name=\"more\" />\n                  </Link>\n                </li>);\n            })\n          }\n        </ul>\n      </TagsList>\n      <AddTag>\n        <Link to={`${url}/9999`}>\n          +添加类别\n        </Link>\n      </AddTag>\n      <Switch>\n        <Route path={`${path}/:id`} component={EditTag} />\n        <Route path={`${path}/:id&mold`} component={EditTag} />\n      </Switch>\n    </Wrapper>\n  );\n};\n\nexport default Edit;","D:\\WebProject\\wcmoney\\src\\views\\Home\\Money\\Edit\\EditTag.tsx",["199"],"import React, { useRef, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Wrapper } from 'components/Wrapper';\nimport TopNav from 'components/TopNav';\nimport Icon from 'components/Icon';\n\nimport useTags from 'hooks/useTags';\nimport { defaultIcon } from 'common/iconsLib';\n\nimport styled from 'styled-components';\n\nimport { CategorySection } from '../section/CategorySection';\nimport { TypeSection } from 'components/TypeSection';\n\n\nconst InputTag = styled.section`\n  > label{\n    display: flex;\n    align-items: center;\n    > input {\n      flex: 1;\n      border: none;\n      border-bottom: 1px solid #000;\n      outline: none;\n      padding: 7px 0;\n      margin: 0 12px;\n      font-size: 14px;\n    }\n    .icon{\n      margin-right: 10px;\n      width: 30px;\n      height: 30px;\n      fill:#434343;\n    }\n    \n  }\n  \n`;\nconst IconList = styled.section`\n  flex: 1;\n  overflow-y: auto;\n  ul{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    li{\n      padding: 20px;\n      > .icon{\n        width: 30px;\n        height: 30px;\n        fill:#434343;\n      }\n    }\n  }\n`;\nconst Button = styled.section`\n padding-top: 20px;\n display: flex;\n justify-content: center;\n align-items: center;\n margin-bottom: 10px;\n > button{\n    outline: none;\n    font-size: 14px;\n    border-radius: 4px;\n    padding: 10px 24px;\n    margin: 0 24px;\n    &.save{\n      border: 1px solid #9CCAC0;\n      background-color:#fff;\n    }\n    &.delete{\n      border: 1px solid #FFFFFF;\n      background-color:#9CCAC0;\n      color: red;\n    }\n    .selected{\n      background-color:#9CCAC0;\n      color: #fff;\n    }\n }\n`;\nconst Span = styled.section`\npadding: 10px 0px;\n display: flex;\n justify-content: center;\n align-items: center;\n font-size: 14px;\n color:#343233;\n background: #ffda44;\n > button{\n   border: none;\n   background: #ffda44;\n    outline: none;\n    font-size: 14px;\n    border-radius: 4px;\n    padding: 0px 24px;\n    margin: 0 24px;}\n`;\ntype Params = {\n  id: string\n}\nconst EditTag: React.FC = (props: any) => {\n  const [iconName, setIconName] = useState('9999');\n  const [category, setCategory] = useState<'-' | '+'>('-');\n  const { findTag, updateTag, addTag, deleteTag } = useTags();\n  const history = useHistory();\n  const { id: idString } = useParams<Params>();\n  const tag = findTag(parseInt(idString)) || '';\n  const inputRef = useRef<HTMLInputElement>(null);\n  // 修改标签\n  const saveTag = () => {\n    if (inputRef.current !== null && inputRef.current.value !== '' && inputRef.current.value.trim().length <= 4) {\n      let newIconName = iconName !== '9999' ? iconName : tag.iconName;\n      updateTag(tag.id, { name: inputRef.current.value.trim().substring(0, 4), iconName: newIconName }, tag.mold);\n      window.alert('修改成功');\n      history.goBack();\n    } else {\n      window.alert('不能输入空的标签以及输入的汉字不能超过四个！');\n    }\n  };\n\n  // 添加标签\n  const addNewTag = () => {\n    if (inputRef.current !== null && inputRef.current.value !== '' && inputRef.current.value.trim().length <= 4) {\n      addTag(inputRef.current.value.trim().substring(0, 4), iconName, category);\n      window.alert('添加成功');\n      history.goBack();\n    } else {\n      window.alert('不能输入空的标签以及输入的汉字不能超过四个！');\n    }\n  };\n  // 删除标签\n  const deleteOneTag = () => {\n    if (inputRef.current !== null) {\n      deleteTag(tag.id)\n      // alert('删除成功');\n      history.goBack();\n\n\n    }\n  };\n  const getIcon = (iconName: string) => {\n    setIconName(iconName);\n  };\n\n  return (\n    <Wrapper>\n      <TopNav name=\"back\" {...props}>\n        {idString === '9999' ? '新建分类' : '编辑分类'}\n      </TopNav>\n      <InputTag>\n        {idString === '9999' ?\n          <>\n            <TypeSection>\n              <CategorySection value={category}\n                onChange={value => setCategory(value)}\n              />\n            </TypeSection>\n            <label>\n              <div style={{ marginLeft: '16px', borderRadius: \"50%\", background: \"#ffda44\", padding: \"8px 0px 4px 10px\" }}>\n                <Icon name={iconName} />\n              </div>\n              <input type=\"text\"\n                placeholder=\"请输入类别名称(不超过四个字)\"\n                defaultValue=\"\"\n                ref={inputRef} />\n            </label>\n          </>\n          : <label>\n            <div style={{ marginLeft: '16px', marginTop: \"10px\", borderRadius: \"50%\", background: \"#ffda44\", padding: \"8px 0px 4px 10px\" }}>\n              <Icon name={iconName === '9999' ? tag.iconName : iconName} />\n            </div>\n            <input type=\"text\"\n              placeholder={tag.name}\n              defaultValue={tag.name}\n              ref={inputRef} />\n          </label>\n\n        }\n      </InputTag>\n      <IconList>\n        <ul>\n          {\n            defaultIcon.map((item) => {\n              return (<li key={item.id} onClick={() => getIcon(item.iconName)}>\n\n                <Icon name={item.iconName} />\n\n              </li>);\n            })\n          }\n        </ul>\n      </IconList>\n      {idString === '9999' ?\n        <Span onClick={addNewTag}>\n          +添加\n        </Span>\n        // <Button>\n        //   <button className=\"save\" onClick={addNewTag}>+添加新标签</button>\n        // </Button>\n        :\n        <Span>\n          <button className=\"save\" onClick={saveTag}>+保存</button>\n          <button className=\"delete\" onClick={deleteOneTag}>-删除</button>\n        </Span>\n      }\n    </Wrapper>\n  );\n};\n\nexport { EditTag };\n\n\n","D:\\WebProject\\wcmoney\\src\\common\\generateOutput.tsx",[],"D:\\WebProject\\wcmoney\\src\\components\\MaskDiv\\MaskDiv.tsx",[],"D:\\WebProject\\wcmoney\\src\\common\\iconsLib.tsx",[],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":2,"column":17,"nodeType":"206","messageId":"207","endLine":2,"endColumn":26},{"ruleId":"204","severity":1,"message":"208","line":4,"column":10,"nodeType":"206","messageId":"207","endLine":4,"endColumn":19},{"ruleId":"204","severity":1,"message":"209","line":5,"column":22,"nodeType":"206","messageId":"207","endLine":5,"endColumn":32},{"ruleId":"204","severity":1,"message":"210","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":12},{"ruleId":"204","severity":1,"message":"208","line":14,"column":10,"nodeType":"206","messageId":"207","endLine":14,"endColumn":19},{"ruleId":"211","severity":1,"message":"212","line":1,"column":13,"nodeType":"206","messageId":"207","endLine":1,"endColumn":24},{"ruleId":"204","severity":1,"message":"213","line":5,"column":10,"nodeType":"206","messageId":"207","endLine":5,"endColumn":16},{"ruleId":"204","severity":1,"message":"210","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":12},{"ruleId":"204","severity":1,"message":"205","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"214","line":12,"column":10,"nodeType":"206","messageId":"207","endLine":12,"endColumn":17},{"ruleId":"204","severity":1,"message":"215","line":57,"column":17,"nodeType":"206","messageId":"207","endLine":57,"endColumn":24},{"ruleId":"204","severity":1,"message":"216","line":57,"column":7,"nodeType":"206","messageId":"207","endLine":57,"endColumn":13},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ShowMoney' is defined but never used.","'RecordItem' is defined but never used.","'Icon' is defined but never used.","no-unused-vars","'actionTypes' is defined but never used.","'result' is defined but never used.","'connect' is defined but never used.","'setTags' is assigned a value but never used.","'Button' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]